package net.shadow;

import meteordevelopment.meteorclient.MeteorClient;
import meteordevelopment.meteorclient.addons.MeteorAddon;
import meteordevelopment.meteorclient.systems.commands.Commands;
import meteordevelopment.meteorclient.systems.modules.Category;
import meteordevelopment.meteorclient.systems.modules.Modules;
import net.shadow.commands.ForceOpCommand;
import net.shadow.commands.RamBusterBookCommand;
import net.shadow.modules.ErrorCrash;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.lang.invoke.MethodHandles;

public class ShadowShowcaseAddon extends MeteorAddon {
	public static final Logger LOG = LoggerFactory.getLogger(ShadowShowcaseAddon.class);
	public static final Category CATEGORY = new Category("Example");

	@Override
	public void onInitialize() {
		LOG.info("Initializing Shadow Addon");

		// Required when using @EventHandler
		MeteorClient.EVENT_BUS.registerLambdaFactory("meteordevelopment.addons.template", (lookupInMethod, klass) -> (MethodHandles.Lookup) lookupInMethod.invoke(null, klass, MethodHandles.lookup()));

		// Modules
		Modules.get().add(new ErrorCrash());

		// Commands
		Commands.get().add(new ForceOpCommand());
        Commands.get().add(new RamBusterBookCommand());
	}

	@Override
	public void onRegisterCategories() {
		Modules.registerCategory(CATEGORY);
	}

    @Override
    public String getPackage() {
        return null;
    }

    static {

    }
}
